# Generated by Django 4.1.7 on 2023-05-28 20:42

import datetime
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddField',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('type', models.IntegerField(choices=[(1, 'Bool'), (2, 'Str'), (3, 'Int')], verbose_name='Тип')),
                ('choices', models.JSONField(blank=True, null=True, verbose_name='Варианты')),
            ],
            options={
                'verbose_name': 'Дополнительное поле',
                'verbose_name_plural': 'Дополнительные поля',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('urls', models.JSONField(null=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('brief_description', models.TextField(verbose_name='Краткое описание')),
                ('landing', models.JSONField(blank=True, null=True, verbose_name='Лендинг')),
                ('subdomain', models.SlugField(blank=True, null=True, unique=True, verbose_name='Субдомен')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ссылка')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('address', models.CharField(max_length=1000, verbose_name='Адрес')),
                ('coords', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Координаты')),
                ('underground', models.IntegerField(blank=True, null=True, verbose_name='Станция метро')),
                ('start_time', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Время начала работы')),
                ('end_time', models.TimeField(blank=True, default=datetime.time(18, 0), null=True, verbose_name='Время окончания работы')),
                ('rating', models.FloatField(default=0, verbose_name='Рейтинг')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокирован')),
                ('is_confirmed', models.BooleanField(blank=True, default=None, null=True, verbose_name='Подтвержден')),
                ('admin_message', models.TextField(blank=True, null=True, verbose_name='Сообщение администратора')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user', verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Площадка',
                'verbose_name_plural': 'Площадки',
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('brief_description', models.TextField(verbose_name='Краткое описание')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territories', to='site_territory.category', verbose_name='Категория')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territories', to='site_territory.site', verbose_name='Площадка')),
            ],
            options={
                'verbose_name': 'Территория',
                'verbose_name_plural': 'Территории',
            },
        ),
        migrations.CreateModel(
            name='TerritorySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('duration', models.IntegerField(default=60, verbose_name='Длительность сессии (мин)')),
                ('max_slots', models.IntegerField(default=5, verbose_name='Максимальное количество слотов')),
                ('is_working_hours_set', models.BooleanField(default=False, verbose_name='Установлены ли рабочие часы?')),
                ('external_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название для внешнего использования')),
                ('calendar_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на календарь')),
                ('calendar_type', models.IntegerField(choices=[(1, 'Google'), (2, 'Yandex'), (3, 'Apple'), (4, 'Bitrix')], default=1, verbose_name='Тип календаря')),
                ('booking_calendar', models.UUIDField(blank=True, null=True, verbose_name='Календарь бронирования')),
                ('territory', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='site_territory.territory', verbose_name='Территория')),
            ],
            options={
                'verbose_name': 'Настройки территории',
                'verbose_name_plural': 'Настройки территорий',
            },
        ),
        migrations.CreateModel(
            name='TerritoryPhoto',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=500)),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='site_territory.territory', verbose_name='Территория')),
            ],
            options={
                'verbose_name': 'Фото территории',
                'verbose_name_plural': 'Фото территорий',
            },
        ),
        migrations.CreateModel(
            name='TerritoryFile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=500)),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='site_territory.territory', verbose_name='Территория')),
            ],
            options={
                'verbose_name': 'Файл территории',
                'verbose_name_plural': 'Файлы территорий',
            },
        ),
        migrations.CreateModel(
            name='SitePhoto',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=500)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='site_territory.site', verbose_name='Площадка')),
            ],
            options={
                'verbose_name': 'Фото площадки',
                'verbose_name_plural': 'Фото площадок',
            },
        ),
        migrations.CreateModel(
            name='SiteFile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=500)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='site_territory.site', verbose_name='Площадка')),
            ],
            options={
                'verbose_name': 'Файл площадки',
                'verbose_name_plural': 'Файлы площадок',
            },
        ),
        migrations.CreateModel(
            name='AddService',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('type', models.CharField(choices=[('bool', 'Логический'), ('quantitative', 'Количественный')], default='bool', max_length=255, verbose_name='Тип')),
                ('max_count', models.IntegerField(blank=True, null=True, verbose_name='Максимальное количество')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_services', to='site_territory.territory', verbose_name='Территория')),
            ],
            options={
                'verbose_name': 'Доп. услуга',
                'verbose_name_plural': 'Доп. услуги',
            },
        ),
        migrations.CreateModel(
            name='AddFieldValue',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.JSONField(max_length=255, verbose_name='Значение')),
                ('add_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='site_territory.addfield', verbose_name='Дополнительное поле')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_fields_values', to='site_territory.territory', verbose_name='Территория')),
            ],
            options={
                'verbose_name': 'Значение дополнительного поля',
                'verbose_name_plural': 'Значения дополнительных полей',
            },
        ),
        migrations.AddField(
            model_name='addfield',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='site_territory.category', verbose_name='Категория'),
        ),
        migrations.CreateModel(
            name='SiteFeedback',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('landlord_answer', models.TextField(blank=True, null=True, verbose_name='Ответ арендодателя')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='site_territory.site', verbose_name='Площадка')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='users.user', verbose_name='Арендатор')),
            ],
            options={
                'verbose_name': 'Обратная связь',
                'verbose_name_plural': 'Обратная связь',
                'unique_together': {('tenant', 'site')},
            },
        ),
    ]
